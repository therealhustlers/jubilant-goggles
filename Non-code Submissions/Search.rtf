{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // CPP program to implement Binary Search for strings\
#include<bits/stdc++.h>\
using namespace std;\
\
	// Returns index of x if it is present in arr[],\
	// else return -1\
	int binarySearch(string arr[], string x,int n)\
	\{\
		int l = 0 ;\
		int r = n - 1;\
		while (l <= r)\
		\{\
			int m = l + (r - l) / 2;\
\
		int res = -1000; //some random value assigned because if res is already 0 then\
							//it will always return 0	\
		if (x == (arr[m]))\
			res = 0;\
			\
\
			// Check if x is present at mid\
			if (res == 0)\
				return m;\
\
			// If x greater, ignore left half\
			if (x > (arr[m]))\
				l = m + 1;\
\
			// If x is smaller, ignore right half\
			else\
				r = m - 1;\
		\}\
\
		return -1;\
	\}\
\
	// Driver code\
	int main()\
	\{\
		string arr[] = \{ "contribute", "geeks", "ide", "practice"\};\
		string x = "ide";\
		int n = 4;\
		int result = binarySearch(arr, x,n);\
\
		if (result == -1)\
			cout << ("Element not present");\
		else\
			cout << ("Element found at index ") << result;\
	\}\
	\
// This code is contributed by}